---
title:  "What is Electrode?"
permalink: docs/what_is_electrode.html
toplevel: "Overview"
---

> Electrode is a platform for building universal React/Node.js applications with
> a standardized structure that follows best practices and has modern
> technologies baked in. Electrode focuses on performance, component reusability,
> and simple deployment to multiple cloud providers—so you can focus on what
> makes your app unique.

### Core: Quick + Easy

Electrode Core allows you to build a flexible and universal React/Node.js
application in minutes, with support for server-side rendering and easy
deployment. Use Electrode to start new projects quickly with a simple,
consistent structure that follows modern best practices.

The heart of the platform is the [Electrode Archetype System], which allows for
a standardized configuration, structure and workflow throughout the entire
application. By enforcing a sensible structure and consistency for components,
modules and the entire app, Electrode’s Archetype system helps you build
scalable applications you can trust while ensuring streamlined development and
deployment.

It only takes a few minutes to get your new Electrode application running and
deployed to the cloud. See our [Quick Guide] to get started now.

### Standalone Modules: Optimize Where You Want

As part of the Electrode Platform, we have a number of modules to help with
common tasks and features, from [server-side render caching] to
[flexible configuration management]. These modules can be used independently of
Electrode Core, which means you can [integrate them into your existing apps].

Start using these modules in your existing application with our
[standalone modules guide].

### Tools: Power Up Your Existing Applications

The Electrode Platform also has tools that can be consumed by existing
applications using other platforms (though with Electrode core, these tools are
either bundled directly or require far less configuration). There are currently
two powerful tools: [Electrode Explorer], which enables discovery of reusable
components, and [Electrify], which helps optimize your JavaScript bundles.

<hr>

### Features

[Electrode Boilerplate] comes fully loaded with the best technologies available:

*   [React], an awesome JavaScript library for building user interfaces, created
    by Facebook.
*   [Redux], a predictable state container for JavaScript apps.
*   [React Router], a powerful routing library built on top of React.
*   [CSS Modules], a CSS file in which all class names and animation names are
    scoped locally by default. Fixes the problem of the global scope in
    CSS.
*   [Universal rendering] built in.
*   [Webpack], a powerful module bundler.
*   [Webpack Isomorphic Loader], a powerful tool that makes NodeJS `require`
    understand files such as images for server-side rendering.
*   [Babel], a transpiler for ES6 + 7.
*   [ESLint], a pluggable linting utility for JavaScript.
*   [Mocha], a feature-rich JavaScript testing framework.
*   [Enzyme], a JavaScript testing utility for React, created by airbnb.
*   [TravisCI], a continuous integration service to build and test software
    projects.
*   [Gulp], a JavaScript build tool that lets us automate tasks.
*   [Yeoman], a scaffolding tool for modern webapps.
*   [History], a JavaScript library for managing session history.
*   [Bluebird], a great JavaScript promise library.
*   [Electrode Confippet], a versatile and flexible utility for managing
    configurations of Node.js applications.
*   [Electrode JWT CSRF], a module providing Cross-Site Request Forgery (CSRF)
    protection with JWT.
*   [Electrode-Redux-Router-Engine], an Electrode routing and rendering engine
    using React Router and Redux.
*   [Component Caching], an Electrode module to optimize React server-side
    rendering with profiling and component caching.
*   [Electrode Server], a configurable web server using Hapi.js on top of
    Node.js.
*   [Electrify], a tool for analyzing the module tree of Webpack projects.
*   [Electrode-Docgen], a custom metadata extractor for the Electrode framework
    that automates component documentation.

[Electrode Archetype System]: what_is_electrode.html
[Quick Guide]: get_started.html
[server-side render caching]: server_side_render_cache.html
[Electrode Confippet]: confippet.html
[flexible configuration management]: confippet.html
[integrate them into your existing apps]: stand_alone_modules.html
[standalone modules guide]: stand_alone_modules.html
[discovery of reusable components]: electrode_explorer.html
[JavaScript bundles]: electrify.html
[Electrode Explorer]: electrode_explorer.html
[Electrify]: electrify.html
[Electrode Boilerplate]: https://github.com/electrode-io/electrode#boilerplate-universal-react-node
[React]: https://facebook.github.io/react/index.html
[Redux]: http://redux.js.org/docs/basics/UsageWithReact.html
[React Router]: https://github.com/ReactTraining/react-router/tree/master/docs
[CSS Modules]: https://github.com/css-modules/css-modules
[Universal Rendering]: https://medium.com/@mjackson/universal-javascript-4761051b7ae9#.xjxr5yj5z
[Webpack]: https://webpack.github.io/docs/motivation.html
[Webpack Isomorphic Loader]: https://github.com/jchip/isomorphic-loader
[Babel]: https://babeljs.io/
[ESLint]: http://eslint.org/
[Mocha]: https://mochajs.org/
[Enzyme]: https://github.com/airbnb/enzyme
[TravisCI]: https://travis-ci.org/
[Gulp]: http://gulpjs.com/
[Yeoman]: http://yeoman.io/
[History]: https://www.npmjs.com/package/history
[Bluebird]: Bluebird
[Electrode JWT CSRF]: https://github.com/electrode-io/electrode-csrf-jwt
[Electrode-Redux-Router-Engine]: https://github.com/electrode-io/electrode-redux-router-engine
[Component Caching]: https://github.com/electrode-io/electrode-react-ssr-caching
[Electrode Server]: https://github.com/electrode-io/electrode-server
[Electrify]: https://github.com/electrode-io/electrify
[Electrode-Docgen]: https://github.com/electrode-io/electrode-docgen